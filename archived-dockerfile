# This Dockerfile is not currently in use as there is a bug building web projects 
# inside a Dockerfile. Once there is a resolution to our issue we can use this Dockerfile
# instead: https://github.com/flutter/flutter/issues/158088



#######################
##  Build Container  ##
#######################
FROM registry.digitalocean.com/polar-labs-registry/flutter-runner:3.24.4 AS build

# store the app directory in the flutter user home folder to avoid permissions bullshit
# make sure this matches the ENV APP_DIRECTORY in the deploy container
ENV APP_DIRECTORY=/home/flutter/app

# Set the working directory
RUN mkdir $APP_DIRECTORY && chown flutter:flutter $APP_DIRECTORY
WORKDIR $APP_DIRECTORY

# Copy the code into the container
COPY --chown=flutter:flutter . $APP_DIRECTORY

# must use flutter user from base image
USER flutter

# Ensure a clean start for the build
RUN flutter clean

# Fetch the dependencies
RUN flutter pub get

# Build the release version of the app
RUN flutter build web --no-pub --release --verbose


########################
##  Deploy Container  ##
########################
# Using nginx web server to serve the built out dart webapp files
FROM nginx:alpine

ENV APP_DIRECTORY=/home/flutter/app

# Copy the build artifacts from the build step
COPY --from=build $APP_DIRECTORY/build/web /usr/share/nginx/html

# Copy the nginx configuration file into a usable directory for Nginx
COPY nginx.conf /etc/nginx/nginx.conf

EXPOSE 8000

# Run nginx in the foreground instead as a background process. This MAY make it easier to check whats going on with the nginx process.
# But also because when nginx is running in a docker container in the foreground, it seems to exit with a 0 code. 
CMD ["nginx", "-g", "daemon off;"]